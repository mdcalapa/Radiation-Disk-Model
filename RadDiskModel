#AY214 Radiation Disk Model
#2014
#Import Stuff
import numpy as np
import matplotlib.pyplot as plt
import math
#constants
h = 6.626e-27
k = 1.38e-16
c = 3e10
#Planck function - takes in a frequency and a temperature and calculates the planck curve value
def planck(v,T):
	h = 6.626e-27
	k = 1.38e-16
	c = 3e10

	x=((h*8.0*math.pi)/(c**3.0))
	y=(v**3.0)
	exponente = ((h*v)/(k*T))
	ex = np.exp(exponente)-1

	PLANCK=(x*y)*(ex**-1)
	return PLANCK

#set up a radius array spaced in log stand a temperature array based on this raduis
r = np.logspace(13,17,num=200)
T = (r**(-3./4.))*(1e17)
#frequency array in linear steps
nu=np.logspace(15, 17, 200)
#setup empty arrays to be filled in the for loops - sum will be the luminosity in each dR, final is the summation of the luminosity at each frequency, do this for both T(r)'s
sum=np.zeros(len(r))
final = np.zeros(len(nu))
for k in np.arange(0,len(nu)-1):
	nustep=nu[k]
	for j in np.arange(0,len(r)-1):
		sum[j] = planck(nustep,T[j])*(2.*math.pi*(r[j])*(((r[j+1])) - ((r[j]))))
	final[k]=(np.sum(sum))

T2 = r**(-1./2.)*(1e12)
sum2=np.zeros((len(nu),len(r)))
final2 = np.zeros(len(nu))
for k in np.arange(0,len(nu)-1):
	nustep=nu[k]
	for j in np.arange(0,len(r)-1):
		sum2[j] = planck(nustep,T2[j])*(2.*math.pi*(r[j])*(((r[j+1])) - ((r[j]))))
	final2[k]=(np.sum(sum2))

#finally plot the sums for the different T(r)'s along with theoretical F(nu)'s
#plt.plot(nu,sum)
plt.plot(nu,final*(1e-20),c='blue',label='T~r**-0.75')
plt.plot(nu,final2*(1e-20),c='red',label='T~r**-0.5')
plt.yscale('log')
plt.xscale('log')
Fnu = nu**(1./3.)
Fnu2 = (nu)**(-1.)
plt.plot(nu,Fnu,label='nu**1/3',linestyle=':')
plt.plot(nu,Fnu2*1e10,label='nu**-1',linestyle='-.')
plt.legend()
#plt.ylim([1e0,1e8])
#plt.xlim([1e10,1e17])
plt.xlabel('Frequency')
plt.ylabel('Luminosity')
plt.show()
